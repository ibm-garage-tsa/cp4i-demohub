{"componentChunkName":"component---src-pages-tutorials-gettingstartedwith-event-streams-index-mdx","path":"/tutorials/GettingstartedwithEventStreams/","result":{"pageContext":{"frontmatter":{"title":"Getting started with IBM Event Streams v10"},"relativePagePath":"/tutorials/GettingstartedwithEventStreams/index.mdx","titleType":"page","MdxNode":{"id":"c781eb29-47ec-5737-b3c4-0077f1e7c5a5","children":[],"parent":"18866458-6ae8-5fc4-9a25-b2696af81508","internal":{"content":"---\r\ntitle: Getting started with IBM Event Streams v10\r\n---\r\nimport ArticleDetails from '../../../../src/gatsby-theme-carbon/components/ArticleDetails'\r\n\r\n<ArticleDetails name=\"Carlos Hirata, Ravi Katikala\" lastUpdated=\"September 2020\" readTimeMinutes=\"45\" />\r\n\r\nIBM Event Streams is based on years of operational expertise IBM has gained from running Apache Kafka® Event\r\nStreams for enterprises. On OpenShift® 4.4 and IBM Cloud Pak for Integration 2020.2.1, IBM Event Streams offers enterprise-grade security, scalability, and reliability running on Red Hat® OpenShift® Container Platform as certified contain.\r\n\r\n<AnchorLinks>\r\n  <AnchorLink>Introduction</AnchorLink>\r\n  <AnchorLink>Prepare the environment</AnchorLink>\r\n  <AnchorLink>Create and manage Event Streams topics</AnchorLink>\r\n  <AnchorLink>Use a Starter application to send and receive data</AnchorLink>\r\n  <AnchorLink>Verifying the events in a topic</AnchorLink>\r\n  <AnchorLink>Using Event Streams Monitoring</AnchorLink>\r\n  <AnchorLink>Share the API</AnchorLink>\r\n  <AnchorLink>Installing an IBM Event Streams v.10 instance in IBM Cloud Pak for Integration using Red Hat Operators</AnchorLink>\r\n  <AnchorLink>Summary</AnchorLink>\r\n</AnchorLinks>\r\n\r\n## Introduction\r\n\r\nBuilding an event-driven architecture with IBM Event Steams allows organizations to transition from traditional monolith systems and silos to more modern microservices and event streaming applications that increase their agility and accelerate their time to innovation.\r\nIBM Event Streams is an event-streaming platform based on the Apache Kafka® project and incorporates the open source Strimzi technology. IBM Event Streams v10 includes Kafka release 2.5.0, and supports the use of all Kafka interfaces.\r\n\r\nAs this is a new deployment of the Cloud Pak for Integration, you must execute some steps to prepare the environment. Initial setup steps are only needed for a fresh installation of the platform. They do not need to be repeated.\r\nAll work for this lab is done on the Developer Machine. Open the developer Machine VM by clicking the tile.\r\n\r\n## Takeaways\r\n\r\n-   Preparing IBM Cloud Pak for Integration 2020.2.1 running on Red Hat OpenShift 4.4\r\n-   Creating and managing Event Streams topics\r\n-   Using a Starter application to send and receive data\r\n-   Verifying the events in a topic\r\n-   Using Event Streams Monitoring\r\n-   Installing  an IBM Event Streams v.10 instance in IBM Cloud Pak for Integration using Red Hat Operators\r\n\r\n## Preparing the environment\r\n\r\nAs this is a new deployment of the Cloud Pak for Integration, you must execute some steps to prepare the environment. Initial setup steps are only needed for a fresh installation of the platform. They do not need to be repeated.\r\n\r\n1.All work for this lab is done on the Developer Machine. Open the Developer Machine VM by copying the Client VM VNC link in a browser window from your email or the Reservation Details as shown below.\r\n\r\n![](images/tutorial_html_4684368ee9aef605.png)\r\n\r\nUse the password specified in parenthesis to login to VNC\r\n\r\n![](images/tutorial_html_dcc3a9fa250b6267.png)\r\n\r\n2.In your workstation open a browser and enter http://cloud.ibm.com and enter your **ibmid** and click continue and password to login IBM Cloud.\r\n\r\n![](images/tutorial_html_40856922adb9fae5.png)\r\n\r\n3.Enter your IBM userid  and the password and then enter the verify code.\r\n\r\n![](images/tutorial_html_e00b9a6736f7e923.png)\r\n\r\n4.In the IBM Cloud Dashboard. You see all information about the infrastructure. On the Resource summary. Observe if you have one cluster and click **Cluster** link.\r\n\r\n![](images/tutorial_html_43ece9238189e0a4.png)\r\n\r\n5.You see the  available resources for your cluster. Select Clusters arrow and click your cluster line.\r\n\r\n![](images/tutorial_html_dd756ffd9ce473bb.png)\r\n\r\n6.In the cluster page, you see the status of your cluster infrastructure,. such as worker node, CPU and Memory usage. Click **OpenShift Web Console**.\r\n\r\n![](images/tutorial_html_d22a349be88c0a4f.png)\r\n\r\n7.In the OpenShift console. Select the following:\r\n\r\n```\r\n    a. **Networking**\r\n\r\n    b. **Routes**\r\n\r\n    c. Drill down the Project to **Integration**\r\n\r\n    d. Click the **Navigator** link.\r\n\r\n```\r\n  ![](images/tutorial_html_ff17543331daf722.png)\r\n\r\n8.Select **Default authentication** as authentication type.\r\n\r\n![](images/login_cloud_pak_admin_default.png)\r\n\r\n9.You might need to login screen for IBM Cloud Pak might be displayed, enter the username: admin and Password (Enter the 32 characters password that you created when you made the Cloud Pak provisioning) and Click Log in.\r\nTip: You might need to use the password. You can use the Clipboard to save the password.\r\n\r\n![](images/login_cloud_pak_userid_password.png)\r\n\r\n10.In the Cloud Pak Welcome page, you see Capabilities and Runtimes instances.\r\n\r\n![](images/Welcome_IBM_Cloud_Pak.png)\r\n\r\n## Creating and managing Event Streams topics\r\n\r\nApplications connect to Event Streams topics and write to and read from them. Topics are known groupings of related data. Topics are created and configured by the Event Streams administrator.\r\n\r\n1.You use an existing Event Streams instance create In Runtimes and instances.\r\n\r\n![](images/select-event_streams.png)\r\n\r\n2.You see the Welcome to IBM Event Streams page. You create an Event Streams topic, select and click the Create a topic tile. From this page you can navigate and learn more about Event Streams.\r\n\r\n![](images/select_topic.png)\r\n\r\n3.Enter the name of topic : **eslabtopic**, this is the name used to identify the topic in the Event Streams instance.\r\nNote: This lab is preconfigured to connect to that specific topic. You can view the full range of configuration options by setting the **Show all available options** to on. However, this tutorial only focuses on the core set.\r\n\r\n![](images/es-eslabtopic.png)\r\n\r\n4.Change the partitions to **three** and you see the messages to be distributed across the brokers to increase the scalability. Set three partitions and click **Next**.\r\n\r\n![](images/es-3_partitions.png)\r\n\r\n5.Define the message retention time. Set it to **10 minutes** for this lab. Click **Next**.\r\n\r\n![](images/es-10_minutes.png)\r\n\r\n6.Define the number of replicas for your topic. Select the default setting of Replication factor: **3** and Minimum in-sync replicas: **2** and then click **Create topic**.\r\n\r\n![](images/es-replicatication.png)\r\n\r\n7.The **Topics** page is displayed. Your new topic is displayed along with a completion notification. You can now connect the starter application to Event Streams. On the left, click **Toolbox** icon.\r\n\r\n![](images/es-toolbox_menu.png)\r\n\r\n## Using a Starter application to send and receive data\r\n\r\nIn this task shows you how to generate and run a starter application. Using the starter application, you can see how producing and consuming applications connect to a topic and send messages (a message is a unit of data in Kafka). Data sent by the producer can be viewed in the topic in Event Streams. You can then view the same data in the consuming application.\r\nEvent Streams includes several tools that can be used to test Event Streams and help with the development of Event Steams-based applications.\r\n\r\n1.In Toolbox page you can see tools that allow you test and access Event Streams topics. To test the topic that you created, click **Get Started** icon.\r\n\r\n![](images/es-toolbox_menu_starter.png)\r\n\r\n2.The **Configure & Run starter application** page is displayed where you can configure and generate an application, run an application, and send and receive messages (data). Follow the Steps, click **Download JAR from Girhub**.\r\n\r\n![](images/es-configure_run_starter.png)\r\n\r\n3.In the **Github page**, locate and click to download **demo-all.jar**. The **JAR** file is in your download directory **/home/student/Downloads**.\r\n\r\n![](images/es-github_demo-all_jar.png)\r\n\r\n4.Back to **Configure & run starter application** page. Generate the properties .zip file (contains credentials and configuration). Click **Generate properties**.\r\n\r\n![](images/es-configure_run_starter.png)\r\n\r\n5.In the pop window on the right, enter the following:\r\n\r\n```\r\n\r\n  1.Enter Starter application name: **eslabtesterapp**.\r\n  2.Click Existing topic.\r\n  3.Select the topic name: **eslabtopic**.\r\n  4.Click **Generate and download .zip** file.\r\n    This file is in the **/home/student/Downloads** directory.\r\n\r\n```\r\n![](images/es-generate_properties.png)\r\n\r\n6.Do not close the browser. Open a command line.\r\n\r\n![](images/es-command_line.png)\r\n\r\n7.In the terminal:\r\n\r\n```\r\n\r\n  1.Create a directory. Use this command: “ mkdir -p eslab “\r\n  2.Move demo-all.jar from Downloads directory to /home/ibmuser. Use this command “ mv ~/Downloads/demo.all.jar  . “\r\n  3.Move from Downloads eslabtesterapp_properties.zip file to /home/student/eslab directory. Use this command: “mv  ~/Downloads/eslabtesterapp_zip ~/eslab\r\n\r\n```\r\n![](images/es-eslab_ mv.png)\r\n\r\n8.In terminal:\r\n\r\n```\r\n\r\n  1.Go to **eslab** directory, use this command:  “ **cd eslab** “\r\n  2.uncompress the **eslabtesterapp.zip**, use this command: “**unzip eslabtester.zip**“\r\n\r\n```\r\n![](images/es-unzip.png)\r\n\r\n9.Do not close the window terminal. Back to **Configure & Run starter application** page. Locate **Navigate to the JAR file downloaded from GitHub and run it**, click the copy icon (this is an application that allows you send/receive messages in a topic).\r\n\r\n![](images/es-configure_run_jar_file.png)\r\n\r\n10.Do not close the browser. Open the terminal window (make sure you are in /home/ibmuser directory, use this command: “**pwd**”. Paste the command and replace **path-to-properties** to **/home/student/eslab/** execute the maven command to run the starter application.\r\n\r\n![](images/es-run_java_jar.png)\r\n\r\nWhen the message **Application started in 1917ms** (This value might be different)\r\n\r\n![](images/es-run_java_result.png)\r\n\r\n11.Back to **Configure & Run starter application** page. Locate **Access the successfully deployed starter application at the provided URL**. Click the link **localhost:8080** .\r\n\r\n![](images/es-localhost.png)\r\n\r\n12.We see two frames:  **Producer and Consumer**. Type a message (for example: Using IBM Event Streams) in the **payload** field and click **start producing**, and click **start consuming** see messages appearing in the consuming application as they are consumed from the Event Streams topic and let the application running (**54** messages). Look at **Offset**. **Stop the Producer by clicking the start/pause button** (**play button when not active, and spinning blue circle when running**). Also, click the blue icon in the **Consumer** to stop listening for messages. You can see that the message is distributed on three partitions (0, 1, and 2).\r\n\r\n![](images/es-running_54_messages.png)\r\n\r\n13.Back to **Configure & Run starter** application page. Locate the link **Go to the message browser** to View the messages.\r\n\r\n![](images/es-mesage_browse.png)\r\n\r\n14.See the messages in the topic: **eslabtopic** and the messages in the three partitions. You can see the Event Streams monitoring tool. On the left menu, click **monitoring icon**.\r\n\r\n![](images/es-check_message_and_mnonitor.png)\r\n\r\n15.Use the Event Streams interface to evaluate the messages produced, for example, information such as the **Incoming bytes and Outgoing bytes**.\r\n\r\n![](images/es-monitoring.png)\r\n\r\n## Installing an Event Streams instance using OpenShift Operator\r\n\r\nIBM Event Streams v10 is an operator-based release and uses custom resources to define your Event Streams configurations. The Event Streams operator uses the custom resources to deploy and manage the entire lifecycle of your Event Streams instances. You can install in any namespace for this lab use eventstreams namespaces.\r\n\r\n1.In the browser, click the Bookmark toolbar OpenShift console. Locate **Operators -> Installed Operators** ,change project to **eventstreams** and click **IBM Event Streams**.\r\n\r\n![](images/es-installedOperators-Eventstreams.png)\r\n\r\n2.In the Event Streams **Operator Details**. You see all APIs available for installing, including Event Streams, Kafka and Geo-Replicator. Click in Event Streams tile **Create Instance**.\r\n\r\n![](images/es-operatorDetails.png)\r\n\r\n3.In the Event Streams page, you see the Event Streams installed (es-qs). To create a new Event Streams, click Create **EventStreams**.\r\n\r\n![](images/es-create_eventstreams.png)\r\n\r\n4.In **Create EventStreams** page, You see two windows, on the left it is a yaml file that contains the Event Streams configuration and on the right you can use JSON configuration. Select **Samples** link to select which instance of Event Streams (you use **Develepoment**) and then click **Try it**. After you select these the yaml file changes.\r\n\r\n![](images/es-createEventstreams_dev.png)\r\n\r\n5.Now, in yaml file, enter the new name: **eslab** and accept the license enter **true**.\r\n\r\n![](images/es-createeventstreams-yaml.png)\r\n\r\n6.The installation process takes 5-10 minutes. You see the two Event Streams running in the project **eventstreams**.\r\n\r\n![](images/es-EventStreams_operators.png)\r\n\r\n7.Go to IBM Cloud for Integration page, clicking bookmark toolbar. You see the Integration capabilities and the new event streams capability **eslab**. Click **eslab** to open the Event Streams page.\r\n\r\n![](images/es-eslab_menu.png)\r\n\r\n8.On the right, check if the **System is healthy**.\r\n\r\n![](images/es-systemhealthy.png)\r\n\r\n9.Click the tile **Create a topic** .\r\n\r\n![](images/es-createtopic-eslab.png)\r\n\r\n10.Enter the topic name: **esdemotopic** and click **Next**.\r\n\r\n![](images/es-esdemotopic.png)\r\n\r\n11.Change the partition to **3** and click **Next**.\r\n\r\n![](images/es-esdemotopic-3.png)\r\n\r\n12.Change the retention period to **10 minutes** and click **Next**.\r\n\r\n![](images/es-esdemotopic-10.png)\r\n\r\n13.Keep the replication factor: **3** and click **Create a topic** .\r\n\r\n![](images/es-esdemotopic-factor3.png)\r\n\r\n14.Check the topic created.\r\n\r\n![](images/es-esdemotopic-ready.png)\r\n\r\n## summary\r\n\r\nYou have completed this Tutorial and you've learned how to:\r\n\r\n•\tCreated a topic in an Event Streams instance\r\n•\tUsed an application to test the topic\r\n•\tBrowsed the message in a topic\r\n•\tMonitored the messages inbound and outbound\r\n•\tInstalled an event streams instance using RedHat OpenShift Operator\r\n\r\nTo try out more labs, go to Cloud Pak for Integration Demos. For more information about the Cloud Pak for Integration, go to https://www.ibm.com/cloud/cloud-pak-for-integration .\r\n","type":"Mdx","contentDigest":"1fae80c2faae670bc0e8e529290a845c","counter":1599,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Getting started with IBM Event Streams v10"},"exports":{},"rawBody":"---\r\ntitle: Getting started with IBM Event Streams v10\r\n---\r\nimport ArticleDetails from '../../../../src/gatsby-theme-carbon/components/ArticleDetails'\r\n\r\n<ArticleDetails name=\"Carlos Hirata, Ravi Katikala\" lastUpdated=\"September 2020\" readTimeMinutes=\"45\" />\r\n\r\nIBM Event Streams is based on years of operational expertise IBM has gained from running Apache Kafka® Event\r\nStreams for enterprises. On OpenShift® 4.4 and IBM Cloud Pak for Integration 2020.2.1, IBM Event Streams offers enterprise-grade security, scalability, and reliability running on Red Hat® OpenShift® Container Platform as certified contain.\r\n\r\n<AnchorLinks>\r\n  <AnchorLink>Introduction</AnchorLink>\r\n  <AnchorLink>Prepare the environment</AnchorLink>\r\n  <AnchorLink>Create and manage Event Streams topics</AnchorLink>\r\n  <AnchorLink>Use a Starter application to send and receive data</AnchorLink>\r\n  <AnchorLink>Verifying the events in a topic</AnchorLink>\r\n  <AnchorLink>Using Event Streams Monitoring</AnchorLink>\r\n  <AnchorLink>Share the API</AnchorLink>\r\n  <AnchorLink>Installing an IBM Event Streams v.10 instance in IBM Cloud Pak for Integration using Red Hat Operators</AnchorLink>\r\n  <AnchorLink>Summary</AnchorLink>\r\n</AnchorLinks>\r\n\r\n## Introduction\r\n\r\nBuilding an event-driven architecture with IBM Event Steams allows organizations to transition from traditional monolith systems and silos to more modern microservices and event streaming applications that increase their agility and accelerate their time to innovation.\r\nIBM Event Streams is an event-streaming platform based on the Apache Kafka® project and incorporates the open source Strimzi technology. IBM Event Streams v10 includes Kafka release 2.5.0, and supports the use of all Kafka interfaces.\r\n\r\nAs this is a new deployment of the Cloud Pak for Integration, you must execute some steps to prepare the environment. Initial setup steps are only needed for a fresh installation of the platform. They do not need to be repeated.\r\nAll work for this lab is done on the Developer Machine. Open the developer Machine VM by clicking the tile.\r\n\r\n## Takeaways\r\n\r\n-   Preparing IBM Cloud Pak for Integration 2020.2.1 running on Red Hat OpenShift 4.4\r\n-   Creating and managing Event Streams topics\r\n-   Using a Starter application to send and receive data\r\n-   Verifying the events in a topic\r\n-   Using Event Streams Monitoring\r\n-   Installing  an IBM Event Streams v.10 instance in IBM Cloud Pak for Integration using Red Hat Operators\r\n\r\n## Preparing the environment\r\n\r\nAs this is a new deployment of the Cloud Pak for Integration, you must execute some steps to prepare the environment. Initial setup steps are only needed for a fresh installation of the platform. They do not need to be repeated.\r\n\r\n1.All work for this lab is done on the Developer Machine. Open the Developer Machine VM by copying the Client VM VNC link in a browser window from your email or the Reservation Details as shown below.\r\n\r\n![](images/tutorial_html_4684368ee9aef605.png)\r\n\r\nUse the password specified in parenthesis to login to VNC\r\n\r\n![](images/tutorial_html_dcc3a9fa250b6267.png)\r\n\r\n2.In your workstation open a browser and enter http://cloud.ibm.com and enter your **ibmid** and click continue and password to login IBM Cloud.\r\n\r\n![](images/tutorial_html_40856922adb9fae5.png)\r\n\r\n3.Enter your IBM userid  and the password and then enter the verify code.\r\n\r\n![](images/tutorial_html_e00b9a6736f7e923.png)\r\n\r\n4.In the IBM Cloud Dashboard. You see all information about the infrastructure. On the Resource summary. Observe if you have one cluster and click **Cluster** link.\r\n\r\n![](images/tutorial_html_43ece9238189e0a4.png)\r\n\r\n5.You see the  available resources for your cluster. Select Clusters arrow and click your cluster line.\r\n\r\n![](images/tutorial_html_dd756ffd9ce473bb.png)\r\n\r\n6.In the cluster page, you see the status of your cluster infrastructure,. such as worker node, CPU and Memory usage. Click **OpenShift Web Console**.\r\n\r\n![](images/tutorial_html_d22a349be88c0a4f.png)\r\n\r\n7.In the OpenShift console. Select the following:\r\n\r\n```\r\n    a. **Networking**\r\n\r\n    b. **Routes**\r\n\r\n    c. Drill down the Project to **Integration**\r\n\r\n    d. Click the **Navigator** link.\r\n\r\n```\r\n  ![](images/tutorial_html_ff17543331daf722.png)\r\n\r\n8.Select **Default authentication** as authentication type.\r\n\r\n![](images/login_cloud_pak_admin_default.png)\r\n\r\n9.You might need to login screen for IBM Cloud Pak might be displayed, enter the username: admin and Password (Enter the 32 characters password that you created when you made the Cloud Pak provisioning) and Click Log in.\r\nTip: You might need to use the password. You can use the Clipboard to save the password.\r\n\r\n![](images/login_cloud_pak_userid_password.png)\r\n\r\n10.In the Cloud Pak Welcome page, you see Capabilities and Runtimes instances.\r\n\r\n![](images/Welcome_IBM_Cloud_Pak.png)\r\n\r\n## Creating and managing Event Streams topics\r\n\r\nApplications connect to Event Streams topics and write to and read from them. Topics are known groupings of related data. Topics are created and configured by the Event Streams administrator.\r\n\r\n1.You use an existing Event Streams instance create In Runtimes and instances.\r\n\r\n![](images/select-event_streams.png)\r\n\r\n2.You see the Welcome to IBM Event Streams page. You create an Event Streams topic, select and click the Create a topic tile. From this page you can navigate and learn more about Event Streams.\r\n\r\n![](images/select_topic.png)\r\n\r\n3.Enter the name of topic : **eslabtopic**, this is the name used to identify the topic in the Event Streams instance.\r\nNote: This lab is preconfigured to connect to that specific topic. You can view the full range of configuration options by setting the **Show all available options** to on. However, this tutorial only focuses on the core set.\r\n\r\n![](images/es-eslabtopic.png)\r\n\r\n4.Change the partitions to **three** and you see the messages to be distributed across the brokers to increase the scalability. Set three partitions and click **Next**.\r\n\r\n![](images/es-3_partitions.png)\r\n\r\n5.Define the message retention time. Set it to **10 minutes** for this lab. Click **Next**.\r\n\r\n![](images/es-10_minutes.png)\r\n\r\n6.Define the number of replicas for your topic. Select the default setting of Replication factor: **3** and Minimum in-sync replicas: **2** and then click **Create topic**.\r\n\r\n![](images/es-replicatication.png)\r\n\r\n7.The **Topics** page is displayed. Your new topic is displayed along with a completion notification. You can now connect the starter application to Event Streams. On the left, click **Toolbox** icon.\r\n\r\n![](images/es-toolbox_menu.png)\r\n\r\n## Using a Starter application to send and receive data\r\n\r\nIn this task shows you how to generate and run a starter application. Using the starter application, you can see how producing and consuming applications connect to a topic and send messages (a message is a unit of data in Kafka). Data sent by the producer can be viewed in the topic in Event Streams. You can then view the same data in the consuming application.\r\nEvent Streams includes several tools that can be used to test Event Streams and help with the development of Event Steams-based applications.\r\n\r\n1.In Toolbox page you can see tools that allow you test and access Event Streams topics. To test the topic that you created, click **Get Started** icon.\r\n\r\n![](images/es-toolbox_menu_starter.png)\r\n\r\n2.The **Configure & Run starter application** page is displayed where you can configure and generate an application, run an application, and send and receive messages (data). Follow the Steps, click **Download JAR from Girhub**.\r\n\r\n![](images/es-configure_run_starter.png)\r\n\r\n3.In the **Github page**, locate and click to download **demo-all.jar**. The **JAR** file is in your download directory **/home/student/Downloads**.\r\n\r\n![](images/es-github_demo-all_jar.png)\r\n\r\n4.Back to **Configure & run starter application** page. Generate the properties .zip file (contains credentials and configuration). Click **Generate properties**.\r\n\r\n![](images/es-configure_run_starter.png)\r\n\r\n5.In the pop window on the right, enter the following:\r\n\r\n```\r\n\r\n  1.Enter Starter application name: **eslabtesterapp**.\r\n  2.Click Existing topic.\r\n  3.Select the topic name: **eslabtopic**.\r\n  4.Click **Generate and download .zip** file.\r\n    This file is in the **/home/student/Downloads** directory.\r\n\r\n```\r\n![](images/es-generate_properties.png)\r\n\r\n6.Do not close the browser. Open a command line.\r\n\r\n![](images/es-command_line.png)\r\n\r\n7.In the terminal:\r\n\r\n```\r\n\r\n  1.Create a directory. Use this command: “ mkdir -p eslab “\r\n  2.Move demo-all.jar from Downloads directory to /home/ibmuser. Use this command “ mv ~/Downloads/demo.all.jar  . “\r\n  3.Move from Downloads eslabtesterapp_properties.zip file to /home/student/eslab directory. Use this command: “mv  ~/Downloads/eslabtesterapp_zip ~/eslab\r\n\r\n```\r\n![](images/es-eslab_ mv.png)\r\n\r\n8.In terminal:\r\n\r\n```\r\n\r\n  1.Go to **eslab** directory, use this command:  “ **cd eslab** “\r\n  2.uncompress the **eslabtesterapp.zip**, use this command: “**unzip eslabtester.zip**“\r\n\r\n```\r\n![](images/es-unzip.png)\r\n\r\n9.Do not close the window terminal. Back to **Configure & Run starter application** page. Locate **Navigate to the JAR file downloaded from GitHub and run it**, click the copy icon (this is an application that allows you send/receive messages in a topic).\r\n\r\n![](images/es-configure_run_jar_file.png)\r\n\r\n10.Do not close the browser. Open the terminal window (make sure you are in /home/ibmuser directory, use this command: “**pwd**”. Paste the command and replace **path-to-properties** to **/home/student/eslab/** execute the maven command to run the starter application.\r\n\r\n![](images/es-run_java_jar.png)\r\n\r\nWhen the message **Application started in 1917ms** (This value might be different)\r\n\r\n![](images/es-run_java_result.png)\r\n\r\n11.Back to **Configure & Run starter application** page. Locate **Access the successfully deployed starter application at the provided URL**. Click the link **localhost:8080** .\r\n\r\n![](images/es-localhost.png)\r\n\r\n12.We see two frames:  **Producer and Consumer**. Type a message (for example: Using IBM Event Streams) in the **payload** field and click **start producing**, and click **start consuming** see messages appearing in the consuming application as they are consumed from the Event Streams topic and let the application running (**54** messages). Look at **Offset**. **Stop the Producer by clicking the start/pause button** (**play button when not active, and spinning blue circle when running**). Also, click the blue icon in the **Consumer** to stop listening for messages. You can see that the message is distributed on three partitions (0, 1, and 2).\r\n\r\n![](images/es-running_54_messages.png)\r\n\r\n13.Back to **Configure & Run starter** application page. Locate the link **Go to the message browser** to View the messages.\r\n\r\n![](images/es-mesage_browse.png)\r\n\r\n14.See the messages in the topic: **eslabtopic** and the messages in the three partitions. You can see the Event Streams monitoring tool. On the left menu, click **monitoring icon**.\r\n\r\n![](images/es-check_message_and_mnonitor.png)\r\n\r\n15.Use the Event Streams interface to evaluate the messages produced, for example, information such as the **Incoming bytes and Outgoing bytes**.\r\n\r\n![](images/es-monitoring.png)\r\n\r\n## Installing an Event Streams instance using OpenShift Operator\r\n\r\nIBM Event Streams v10 is an operator-based release and uses custom resources to define your Event Streams configurations. The Event Streams operator uses the custom resources to deploy and manage the entire lifecycle of your Event Streams instances. You can install in any namespace for this lab use eventstreams namespaces.\r\n\r\n1.In the browser, click the Bookmark toolbar OpenShift console. Locate **Operators -> Installed Operators** ,change project to **eventstreams** and click **IBM Event Streams**.\r\n\r\n![](images/es-installedOperators-Eventstreams.png)\r\n\r\n2.In the Event Streams **Operator Details**. You see all APIs available for installing, including Event Streams, Kafka and Geo-Replicator. Click in Event Streams tile **Create Instance**.\r\n\r\n![](images/es-operatorDetails.png)\r\n\r\n3.In the Event Streams page, you see the Event Streams installed (es-qs). To create a new Event Streams, click Create **EventStreams**.\r\n\r\n![](images/es-create_eventstreams.png)\r\n\r\n4.In **Create EventStreams** page, You see two windows, on the left it is a yaml file that contains the Event Streams configuration and on the right you can use JSON configuration. Select **Samples** link to select which instance of Event Streams (you use **Develepoment**) and then click **Try it**. After you select these the yaml file changes.\r\n\r\n![](images/es-createEventstreams_dev.png)\r\n\r\n5.Now, in yaml file, enter the new name: **eslab** and accept the license enter **true**.\r\n\r\n![](images/es-createeventstreams-yaml.png)\r\n\r\n6.The installation process takes 5-10 minutes. You see the two Event Streams running in the project **eventstreams**.\r\n\r\n![](images/es-EventStreams_operators.png)\r\n\r\n7.Go to IBM Cloud for Integration page, clicking bookmark toolbar. You see the Integration capabilities and the new event streams capability **eslab**. Click **eslab** to open the Event Streams page.\r\n\r\n![](images/es-eslab_menu.png)\r\n\r\n8.On the right, check if the **System is healthy**.\r\n\r\n![](images/es-systemhealthy.png)\r\n\r\n9.Click the tile **Create a topic** .\r\n\r\n![](images/es-createtopic-eslab.png)\r\n\r\n10.Enter the topic name: **esdemotopic** and click **Next**.\r\n\r\n![](images/es-esdemotopic.png)\r\n\r\n11.Change the partition to **3** and click **Next**.\r\n\r\n![](images/es-esdemotopic-3.png)\r\n\r\n12.Change the retention period to **10 minutes** and click **Next**.\r\n\r\n![](images/es-esdemotopic-10.png)\r\n\r\n13.Keep the replication factor: **3** and click **Create a topic** .\r\n\r\n![](images/es-esdemotopic-factor3.png)\r\n\r\n14.Check the topic created.\r\n\r\n![](images/es-esdemotopic-ready.png)\r\n\r\n## summary\r\n\r\nYou have completed this Tutorial and you've learned how to:\r\n\r\n•\tCreated a topic in an Event Streams instance\r\n•\tUsed an application to test the topic\r\n•\tBrowsed the message in a topic\r\n•\tMonitored the messages inbound and outbound\r\n•\tInstalled an event streams instance using RedHat OpenShift Operator\r\n\r\nTo try out more labs, go to Cloud Pak for Integration Demos. For more information about the Cloud Pak for Integration, go to https://www.ibm.com/cloud/cloud-pak-for-integration .\r\n","fileAbsolutePath":"C:/Users/ruffa/Documents/GitHub/cp4i-demohub/src/pages/tutorials/GettingstartedwithEventStreams/index.mdx"}}},"staticQueryHashes":["1054721580","1054721580","1364590287","2102389209","2102389209","2456312558","2746626797","2746626797","3018647132","3018647132","3037994772","3037994772","768070550","768070550"]}